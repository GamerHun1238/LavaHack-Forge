package com.kisman.cc.features.module.exploit;

import com.kisman.cc.features.module.Category;
import com.kisman.cc.features.module.Module;
import com.kisman.cc.features.module.ModuleInstance;
import com.kisman.cc.settings.Setting;
import com.kisman.cc.settings.types.SettingGroup;
import com.kisman.cc.settings.util.EasingsPattern;
import com.kisman.cc.settings.util.RenderingRewritePattern;
import com.kisman.cc.util.client.providers.PacketMineProvider;
import com.kisman.cc.util.entity.player.InventoryUtil;
import com.kisman.cc.util.world.BlockUtil2;
import net.minecraft.block.BlockLiquid;
import net.minecraft.init.Blocks;
import net.minecraftforge.client.event.RenderWorldLastEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class PacketMine extends Module {
    private final Setting speed = register(new Setting("Speed", this, 0.8f, 0.1f, 1, false));
    public Setting instant = register(new Setting("Instant", this, true));
    private final Setting silent = register(new Setting("Silent", this, true));
    private final Setting strict = register(new Setting("Strict", this, false));
    private final Setting autoSwitch = register(new Setting("Auto Switch", this, true));
    private final SettingGroup renderGroup = register(new SettingGroup(new Setting("Render", this)));
    private final RenderingRewritePattern renderer = new RenderingRewritePattern(this).group(renderGroup).preInit().init();
    private final EasingsPattern scalier = new EasingsPattern(this).group(renderGroup).preInit().init();
    private final Setting instantAttempts = register(new Setting("Instant Attempts", this, 8, 0, 20, true));
    private final Setting range = register(new Setting("Range", this, 16, 4, 30, true));
    public final  Setting packetSpam = register(new Setting("Packet Spam", this, 1, 1, 10, true));

    @ModuleInstance
    public static PacketMine instance;

    public PacketMine() {
        super("PacketMine", "PacketMineProvider implementation", Category.EXPLOIT);
    }

    private void syncSettings() {
        PacketMineProvider.INSTANCE.setSilent(silent.getValBoolean());
        PacketMineProvider.INSTANCE.setInstant(instant.getValBoolean());
        PacketMineProvider.INSTANCE.setStrict(strict.getValBoolean());
        PacketMineProvider.INSTANCE.setAutoSwitch(autoSwitch.getValBoolean());

        PacketMineProvider.INSTANCE.setSpeed(speed.getValDouble());
        PacketMineProvider.INSTANCE.setRange(range.getValInt());
        PacketMineProvider.INSTANCE.setInstantAttempts(instantAttempts.getValInt());
        PacketMineProvider.INSTANCE.setPacketSpam(packetSpam.getValInt());
    }

    public void onEnable() {
        super.onEnable();
        PacketMineProvider.INSTANCE.reset();
    }
    public void update() {
        syncSettings();
    }

    @SubscribeEvent
    public void onRenderWorld(RenderWorldLastEvent event) {
        if (!(PacketMineProvider.INSTANCE.getPosition() == null || mc.world.getBlockState(PacketMineProvider.INSTANCE.getPosition()).getBlock() == Blocks.AIR || mc.world.getBlockState(PacketMineProvider.INSTANCE.getPosition()).getBlock() instanceof BlockLiquid)) renderer.draw(BlockUtil2.getMutableProgressBB2(PacketMineProvider.INSTANCE.getPosition(), mc.player.inventory.getStackInSlot(InventoryUtil.findBestToolSlot(PacketMineProvider.INSTANCE.getPosition())), PacketMineProvider.INSTANCE.getStart(), scalier));
    }
}
