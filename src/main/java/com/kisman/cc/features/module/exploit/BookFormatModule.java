package com.kisman.cc.features.module.exploit;

import com.kisman.cc.features.module.Category;
import com.kisman.cc.features.module.Module;
import com.kisman.cc.gui.book.BookEditingGui;
import com.kisman.cc.settings.Setting;
import com.kisman.cc.util.Colour;
import net.minecraft.client.gui.GuiScreenBook;
import net.minecraft.item.ItemStack;
import net.minecraftforge.client.event.GuiOpenEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

import java.lang.reflect.Field;

public class BookFormatModule extends Module {
    public static BookFormatModule instance;

    public final Setting outline = register(new Setting("Outline", this, true));
    public final Setting outlineColor = register(new Setting("Outline Color", this, new Colour(255, 0, 0, 255)));
    public final Setting filled = register(new Setting("Filled", this, true));
    public final Setting filledColor = register(new Setting("Outline Color", this, new Colour(20, 20, 20, 255)));
    public final Setting textColor = register(new Setting("Text Colour", this, new Colour(255, 255, 255, 255)));

    private Field book_edited;
    private Field book_signed;

    public BookFormatModule() {
        super("BookFormatModule", "", Category.EXPLOIT);

        instance = this;

        Class<GuiScreenBook> screenBook = GuiScreenBook.class;
        try {
            this.book_edited = screenBook.getDeclaredField("field_146474_h");
        } catch (NoSuchFieldException e) {
            try {
                this.book_edited = screenBook.getDeclaredField("book");
            } catch (NoSuchFieldException e2) {
                throw new RuntimeException("FamilyFunPack error: no such field " + e2.getMessage() + " in class GuiScreenBook");
            }
        }
        this.book_edited.setAccessible(true);

        // Get access to bookIsUnsigned field of GuiScreenBook
        try {
            this.book_signed = screenBook.getDeclaredField("field_146475_i");
        } catch (NoSuchFieldException e) {
            try {
                this.book_signed = screenBook.getDeclaredField("bookIsUnsigned");
            } catch (NoSuchFieldException e2) {
                throw new RuntimeException("FamilyFunPack error: no such field " + e2.getMessage() + " in class GuiScreenBook");
            }
        }
        this.book_signed.setAccessible(true);
    }

    @SubscribeEvent
    public void onGuiOpen(GuiOpenEvent event) {
        if(event.getGui() instanceof GuiScreenBook) {
            GuiScreenBook gui = (GuiScreenBook) event.getGui();

            if(gui instanceof BookEditingGui) return;

            try {
                if((boolean) this.book_signed.get(gui)) { // Book is editable
                    ItemStack book = (ItemStack) this.book_edited.get(gui);
                    event.setGui(new BookEditingGui(mc.player, book));
                }
            } catch (IllegalAccessException e) {
                throw new RuntimeException("kisman.cc error: " + e.getMessage());
            }
        }
    }
}
