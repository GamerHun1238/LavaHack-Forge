package com.kisman.cc.features.module.exploit;

import com.kisman.cc.Kisman;
import com.kisman.cc.event.events.PacketEvent;
import com.kisman.cc.features.module.Category;
import com.kisman.cc.features.module.Module;
import com.kisman.cc.settings.Setting;
import com.kisman.cc.settings.types.SettingEnum;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketUseEntity;
import net.minecraft.network.play.server.SPacketPlayerPosLook;

public class SuperReach extends Module {

    private final Setting reach = register(new Setting("Reach", this, 5, 1, 500, true));
    private final Setting range = register(new Setting("Range", this, 5, 1, 6, false));
    private final Setting wallRange = register(new Setting("WallRange", this, 3, 1, 6, false));
    private final Setting throughWalls = register(new Setting("ThroughWalls", this, false));
    private final SettingEnum<Limit> limit = new SettingEnum<>("Limit", this, Limit.None).register();
    private final Setting confirm = register(new Setting("Confirm", this, true));
    private final Setting constrict = register(new Setting("Constrict", this, false));
    private final Setting strict = register(new Setting("Strict", this, false));
    private final Setting rotate = register(new Setting("Rotate", this, false));

    public SuperReach(){
        super("SuperReach", "Hit entities from very far away. This might no work on all servers", Category.EXPLOIT);
    }

    int teleportId = -1;

    public void onEnable(){
        if(mc.player == null || mc.world == null){
            toggle();
            return;
        }
        Kisman.EVENT_BUS.subscribe(this);
        sendPacket(new CPacketPlayer.Position(mc.player.posX + 1037, mc.player.posY + 1037, mc.player.posZ - 1037, false), true);
    }

    @Override
    public void onDisable() {
        super.onDisable();
        Kisman.EVENT_BUS.unsubscribe(this);
        teleportId = -1;
    }

    public double getTeleportDistance(){
        double lim = (3.0  / (3.0 - limit.getValEnum().ordinal()));
        return strict.getValBoolean() ? 2.0 + lim : 5.0 + lim;
    }

    public void sendPacket(CPacketPlayer.Position packet, boolean noConfirm){

    }

    public void doSuperReachPre(CPacketUseEntity packet){
    }

    public void doSuperReachPost(CPacketUseEntity packet){
    }

    @EventHandler
    private final Listener<PacketEvent.Send> listener = new Listener<>(event -> {
        if(!(event.getPacket() instanceof CPacketUseEntity))
            return;
        CPacketUseEntity packet = (CPacketUseEntity) event.getPacket();
        if(packet.getAction() != CPacketUseEntity.Action.ATTACK)
            return;
        if(teleportId == -1)
            return;
        event.cancel();
        doSuperReachPre(packet);
        mc.player.connection.sendPacket(packet);
        doSuperReachPost(packet);

    });

    @EventHandler
    private final Listener<PacketEvent.Receive> receiveListener = new Listener<>(event -> {
        if(!(event.getPacket() instanceof SPacketPlayerPosLook))
            return;
        teleportId = ((SPacketPlayerPosLook) event.getPacket()).getTeleportId();
    });

    private enum Limit {
        None,
        Semi,
        Full
    }
}
