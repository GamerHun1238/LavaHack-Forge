package com.kisman.cc.features.module.exploit;

import com.kisman.cc.Kisman;
import com.kisman.cc.event.events.EventPlayerDamageBlock;
import com.kisman.cc.event.events.EventPlayerMove;
import com.kisman.cc.event.events.EventPlayerUpdate;
import com.kisman.cc.features.module.Category;
import com.kisman.cc.features.module.Module;
import com.kisman.cc.features.module.WorkInProgress;
import com.kisman.cc.util.chat.cubic.ChatUtility;
import com.kisman.cc.util.entity.player.InventoryUtil;
import me.zero.alpine.event.type.Cancellable;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.network.play.client.CPacketHeldItemChange;
import net.minecraft.util.EnumHand;

@WorkInProgress
@Deprecated
public class HandMine extends Module {

    public HandMine(){
        super("HandMine", Category.EXPLOIT);
    }

    private boolean cancel = true;

    private int oldSlot;

    @Override
    public void onEnable(){
        super.onEnable();
        //Kisman.EVENT_BUS.subscribe(preListener);
        //Kisman.EVENT_BUS.subscribe(postListener);
        Kisman.EVENT_BUS.subscribe(this);
    }

    @Override
    public void onDisable(){
        super.onDisable();
        //Kisman.EVENT_BUS.unsubscribe(preListener);
        //Kisman.EVENT_BUS.unsubscribe(postListener);
        Kisman.EVENT_BUS.unsubscribe(this);
        cancel = true;
    }

    @EventHandler
    private final Listener<EventPlayerMove> playerUpdateListener = new Listener<>(event -> {
        if(mc.player == null || mc.world == null)
            return;

        if(!mc.gameSettings.keyBindAttack.isKeyDown())
            return;

        ChatUtility.info().printClientModuleMessage("move");

        int slot = InventoryUtil.findBestToolSlot(mc.objectMouseOver.getBlockPos());

        int oldSlot = mc.player.inventory.currentItem;

        if(slot != 1){
            mc.player.inventory.currentItem = slot;
            mc.playerController.updateController();
        }

        cancel = false;

        mc.player.swingArm(EnumHand.MAIN_HAND);
        mc.playerController.onPlayerDamageBlock(mc.objectMouseOver.getBlockPos(), mc.objectMouseOver.sideHit);

        cancel = true;

        if(slot != -1){
            mc.player.inventory.currentItem = oldSlot;
            mc.playerController.updateController();
        }
    });

    @EventHandler
    private final Listener<EventPlayerDamageBlock.Pre> listener = new Listener<>(event -> {
        ChatUtility.info().printClientModuleMessage("damage");
        if(cancel) event.cancel();
    });

    /*
    private final Listener<EventPlayerDamageBlock.Pre> preListener = new Listener<>(event -> {
        oldSlot = mc.player.inventory.currentItem;
        int slot = InventoryUtil.findBestToolSlot(event.getPos());
        if(slot == -1)
            return;
        mc.player.connection.sendPacket(new CPacketHeldItemChange(slot));
        mc.player.inventory.currentItem = slot;
    });

    private final Listener<EventPlayerDamageBlock.Post> postListener = new Listener<>(event -> {
        mc.player.connection.sendPacket(new CPacketHeldItemChange(oldSlot));
        mc.player.inventory.currentItem = oldSlot;
    });
     */
}
