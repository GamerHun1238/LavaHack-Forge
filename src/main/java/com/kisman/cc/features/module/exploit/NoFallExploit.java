package com.kisman.cc.features.module.exploit;

import com.kisman.cc.features.module.Category;
import com.kisman.cc.features.module.Module;
import com.kisman.cc.settings.Setting;
import com.kisman.cc.util.math.Interpolation;
import net.minecraft.util.math.BlockPos;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;

public class NoFallExploit extends Module {

    private final Setting tolerance = register(new Setting("Tolerance", this, 0.1, 0, 1.0, false));

    public NoFallExploit(){
        super("NoFallExploit", Category.EXPLOIT);
    }

    private boolean reset = false;

    private boolean sprinting;
    private boolean jumping;
    private boolean sneaking;

    @Override
    public void onEnable(){
        super.onEnable();
        MinecraftForge.EVENT_BUS.register(this);
    }

    @Override
    public void onDisable(){
        super.onDisable();
        MinecraftForge.EVENT_BUS.unregister(this);
    }

    @SubscribeEvent
    public void onTick(TickEvent event){
        if(!mc.world.getBlockState(new BlockPos(mc.player.posX, mc.player.posY, mc.player.posZ)).getMaterial().isSolid())
            return;

        if(Interpolation.isAlmostZero(mc.player.posY - ((long) mc.player.posY), tolerance.getValDouble())){
            sprinting = mc.player.isSprinting();
            jumping = mc.player.isJumping;
            sneaking = mc.player.isSneaking();
            mc.player.setSprinting(true);
            mc.player.setJumping(true);
            mc.player.setSneaking(true);
            reset = true;
            return;
        }

        if(reset && mc.player.onGround){
            mc.player.setSneaking(sprinting);
            mc.player.setJumping(jumping);
            mc.player.setSneaking(sneaking);
            reset = false;
        }
    }
}
