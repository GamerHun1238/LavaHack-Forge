package com.kisman.cc.module.exploit;

import com.kisman.cc.module.Category;
import com.kisman.cc.module.Module;
import com.kisman.cc.module.combat.AutoRer;
import com.kisman.cc.settings.Setting;
import com.kisman.cc.util.InventoryUtil;
import com.kisman.cc.util.PlayerUtil;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.init.Items;
import net.minecraft.item.ItemAppleGold;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketHeldItemChange;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.EnumHand;
import net.minecraftforge.event.entity.player.PlayerInteractEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class PacketEat extends Module {

    private final Setting modeSetting = new Setting("Mode", this, Mode.Packet);

    private final Setting healthSetting = new Setting("Health", this, 28.0, 0.0, 36.0, false);
    private final Setting packetSizeSetting = new Setting("PacketIteration", this, 20.0, 0.0, 40.0, false);

    private Mode mode = null;
    private double health = 0;
    private double packetSize = 0;

    public int prvSlot;

    public PacketEat() {
        super("PacketEat", Category.EXPLOIT);

        setmgr.rSetting(modeSetting);
        setmgr.rSetting(healthSetting);
        setmgr.rSetting(packetSizeSetting);

    }

    @Override
    public void update() {

            if(mc.player==null) return;

            mode = (Mode) setmgr.getSettingByName(this, "Mode").getValEnum();
            health = setmgr.getSettingByName(this, "Health").getValDouble();
            packetSize = setmgr.getSettingByName(this, "PacketIteration").getValDouble();

            if (PacketEat.mc.player.isHandActive() && PacketEat.mc.player.getHeldItemMainhand().getItem() instanceof ItemAppleGold && (this.mode == Mode.Packet || this.mode == Mode.Auto)) {
                for (int i = 0; i < this.packetSize; ++i) {
                    PacketEat.mc.player.connection.sendPacket((Packet)new CPacketPlayer());
                }
                PacketEat.mc.player.stopActiveHand();
            }
            if (mode == Mode.Auto && PlayerUtil.getHealth() <= this.health) {
                InventoryUtil.switchToSlotGhost(InventoryUtil.getHotbarItemSlot(Items.GOLDEN_APPLE));
                PacketEat.mc.player.connection.sendPacket((Packet)new CPacketPlayerTryUseItem(EnumHand.MAIN_HAND));
            }
        super.update();
    }

    @SubscribeEvent
    public void onPlayerRightClick(final PlayerInteractEvent.RightClickItem event) {
        if (event.getItemStack().getItem().equals(Items.GOLDEN_APPLE) && this.mode == Mode.Desync) {
            event.setCanceled(true);
            event.getItemStack().getItem().onItemUseFinish(event.getItemStack(), event.getWorld(), (EntityLivingBase)event.getEntityPlayer());
        }
    }

    public enum Mode
    {
        Packet,
        Desync,
        Auto;
    }
}
