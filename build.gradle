//file:noinspection GroovyAssignabilityCheck
//file:noinspection GradlePackageUpdate
//file:noinspection DifferentStdlibGradleVersion
//file:noinspection JCenterRepository
//file:noinspection GroovyUnusedAssignment
//file:noinspection DifferentKotlinGradleVersion
//file:noinspection GrUnresolvedAccess
ext.kotlin_version = '1.3.50'
ext.annotations_version = '16.0.3'
ext.coroutines_version = '1.3.1'
buildscript {
    repositories {
        mavenCentral()
        maven {
            url = "http://files.minecraftforge.net/maven"//https://repo.spongepowered.org/repository/maven-public/
        }
        maven {
            name = 'gradle plugins'
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.telegram:telegraph:1.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

version = 'b0.1.7'
group = 'com.kisman.cc'
archivesBaseName = 'kisman.cc'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "snapshot_20171003"
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    maven {
        name = 'swt-repo'
        url = "http://maven-eclipse.github.io/maven"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        url = 'https://repo.viaversion.com'
    }
    mavenCentral()
    jcenter()
}

configurations {
    shade
    compile.extendsFrom(shade)
}

dependencies {
    compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {//
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    compile group: 'net.jodah', name: 'typetools', version: '0.6.3'
    compile group: "com.googlecode.json-simple", name: "json-simple", version: "1.1.1"
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.19'
    compile(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    shade 'com.neovisionaries:nv-websocket-client:2.14'

    compile group: 'org.json', name: 'json', version: '20210307'
    compile group: 'com.viaversion', name: 'viaversion', version: '4.2.2-SNAPSHOT'
    compile group: 'com.viaversion', name: 'viabackwards', version: '4.2.1-SNAPSHOT'
    compile group: "com.sun.net.httpserver", name: "http", version: "20070405"
    compile group: "org.apache.bcel", name: "bcel", version: "6.5.0"
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: "$kotlin_version"
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk7", version: "$kotlin_version"
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "$kotlin_version"
    compile group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: "$kotlin_version"
    compile group: "org.jetbrains", name: "annotations", version: "$annotations_version"
    compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-core", version: "$coroutines_version"
    compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-jdk8", version: "$coroutines_version"
    compile 'org.jsoup:jsoup:1.11.3'
    compile 'com.formdev:flatlaf:2.4'
    compile 'com.formdev:flatlaf-intellij-themes:2.4'
//    compile 'org.telegram:telegraph:1.0'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.kisman.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

shadowJar {
    dependencies {
        include(dependency('com.yworks:yguard'))
        include(dependency('org.spongepowered:mixin'))
        include(dependency('net.jodah:typetools'))
        include(dependency('com.googlecode.json-simple:json-simple:1.1.1'))
        include(dependency('club.minnced:java-discord-rpc:2.0.1'))
        include(dependency('org.yaml:snakeyaml'))
        include(dependency('org.reflections:reflections'))
        include(dependency('org.javassist:javassist'))
        include(dependency('org.json:json'))
        include(dependency('com.viaversion:viaversion'))
        include(dependency('com.viaversion:viabackwards'))
        include(dependency('com.sun.net.httpserver:http'))
        include(dependency('org.apache.bcel:bcel:6.5.0'))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"))
        include(dependency("org.jetbrains:annotations:$annotations_version"))
        include(dependency("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"))
        include(dependency("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutines_version"))
        include(dependency("org.jsoup:jsoup:1.11.3"))
        include(dependency('com.formdev:flatlaf:2.4'))
        include(dependency('com.formdev:flatlaf-intellij-themes:2.4'))
//        include(dependency('org.telegram:telegraph:1.0'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

task privateJar(type : Jar, dependsOn : jar) {
    from(zipTree(shadowJar.archivePath)) {
        exclude 'assets/loader/**'
        exclude "com/kisman/cc/loader/**"
        exclude 'mixins.loader.json'
        exclude 'mixins.loader.refmap.json'

        exclude 'com/formdev/**'
    }
    manifest {
        attributes(
                'MixinConfigs': 'mixins.Kisman.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'com.kisman.cc.mixin.KismanMixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'kisman_at.cfg'
        )
    }
    baseName = ''
    version = ''
    classifier = 'kisman.cc-b0.1.7'
}

task publicJar(type : Jar, dependsOn : jar) {
    from(zipTree(shadowJar.archivePath)) {
        include "com/kisman/cc/sockets/**"
        include 'com/kisman/cc/ai/**'
        include 'com/kisman/cc/event/**'
        include 'com/kisman/cc/features/**'
        include 'com/kisman/cc/gui/**'
        include 'com/kisman/cc/mixin/**'
        include 'com/kisman/cc/settings/**'
        include 'com/kisman/cc/util/**'
        include 'com/kisman/cc/websockets/**'
        include 'com/kisman/cc/pingbypass/**'
        include 'com/kisman/cc/Kisman.class'
        include 'com/kisman/cc/KismanStatic.class'
        include 'com/kisman/cc/RPC.class'
        include 'org/cubic/**'
        include 'the/kis/devs/api/**'
        include 'mixins.Kisman.json'
        include 'mixins.kisman.refmap.json'
        include 'assets/kismancc/**'
        include 'Main.class'
        include 'me/**'
    }
    baseName = ''
    version = ''
    classifier = 'LavaHack-b0.1.7'
}

task loaderJar(type: Jar, dependsOn: shadowJar) {
    from(zipTree(shadowJar.archivePath)) {
        exclude 'baritone'
        exclude 'com/kisman/cc/ai/**'
        exclude 'com/kisman/cc/event/**'
        exclude 'com/kisman/cc/features/**'
        exclude 'com/kisman/cc/gui/**'
        exclude 'com/kisman/cc/mixin/**'
        exclude 'com/kisman/cc/settings/**'
        exclude 'com/kisman/cc/util/**'
        exclude 'com/kisman/cc/websockets/**'
        exclude 'com/kisman/cc/pingbypass/**'
        exclude 'com/kisman/cc/Kisman.class'
        exclude 'com/kisman/cc/KismanStatic.class'
        exclude 'com/kisman/cc/RPC.class'
        exclude 'the/kis/devs/api/**'
        exclude 'mixins.Kisman.json'
        exclude 'mixins.kisman.refmap.json'
        exclude 'assets/kismancc/**'
        exclude 'org/cubic/**'
        exclude 'Main.class'
        exclude 'me/**'
        exclude 'ghost/classes/**'
    }
    manifest {
        attributes(
                'MixinConfigs': 'mixins.loader.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'com.kisman.cc.loader.LavaHackLoaderCoreMod',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'kisman_at.cfg'
        )
    }
    baseName = ''
    version = ''
    classifier = 'LavaHackLoader-2.0'
}

build.dependsOn(privateJar, publicJar, loaderJar)

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
